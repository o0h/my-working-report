<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2018/12 on まいにち書くぞ</title>
    <link>/archives/2018/12/</link>
    <description>Recent content in 2018/12 on まいにち書くぞ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 12 Dec 2018 11:28:47 +0900</lastBuildDate>
    
        <atom:link href="/archives/2018/12/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2018/12/12</title>
      <link>/posts/20181212/</link>
      <pubDate>Wed, 12 Dec 2018 11:28:47 +0900</pubDate>
      
      <guid>/posts/20181212/</guid>
      <description>

&lt;h3 id=&#34;よもやま&#34;&gt;よもやま&lt;/h3&gt;

&lt;h4 id=&#34;vs-codeなやつ&#34;&gt;VS codeなやつ&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;ブラウザとの連携をしてステップ実行、ができるようになった！！！めっちゃ嬉しいやつ・・・！！！&lt;/li&gt;
&lt;li&gt;「絶対にあるよな・・？」って思っていた「IDEの中でターミナル開く」のやつ、偶然見つけたw これがすごい欲しかった。使うウィンドウ1個減らせる。yarn処理は、JS書くエディタと一緒に表示しておくのが楽しそうだな〜&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;気になった記事-読んだ記事など&#34;&gt;気になった記事・読んだ記事など&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ics.media/entry/11356&#34;&gt;Visual Studio CodeでのJSのデバッグ方法(2018年版) - ICS MEDIA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.karelie.net/vscode-notes/&#34;&gt;VSCode(Visual Studio Code)をメモ帳として使える拡張機能「VSNotes」が便利そう | カレリエ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;便利ツール-ショートカット&#34;&gt;便利ツール・ショートカット&lt;/h3&gt;

&lt;h3 id=&#34;公開したもの&#34;&gt;公開したもの&lt;/h3&gt;

&lt;h3 id=&#34;ひとこと&#34;&gt;ひとこと&lt;/h3&gt;

&lt;p&gt;社内ツールだけど、本番にCake3.7だした🎉&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2018/12/11</title>
      <link>/posts/20181211/</link>
      <pubDate>Tue, 11 Dec 2018 12:23:58 +0900</pubDate>
      
      <guid>/posts/20181211/</guid>
      <description>

&lt;h3 id=&#34;よもやま&#34;&gt;よもやま&lt;/h3&gt;

&lt;h4 id=&#34;php7-3&#34;&gt;PHP7.3&lt;/h4&gt;

&lt;p&gt;PHP7.3のalpine-fpmイメージを使ってみていたのだけど、セグフォ。&lt;br /&gt;
まぁ、とりわけext周りでいろいろあるよね・・・なんて思っていたからそこまで焦ったりガッカリした気持ちにはならず。朝見たツイートを思い出して。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;なお今回修正された7.3.0のopcacheのバグ地味に厳しい奴な気がするので、知らずに踏んで泣く人いそう&lt;/p&gt;&amp;mdash; sji (@sji_ch) &lt;a href=&#34;https://twitter.com/sji_ch/status/1072282627216859136?ref_src=twsrc%5Etfw&#34;&gt;2018年12月11日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;opcache外したら無事に動きましたとさ。これが原因かはわかってないけど！&lt;/p&gt;

&lt;h4 id=&#34;xxxx&#34;&gt;xxxx&lt;/h4&gt;

&lt;h3 id=&#34;気になった記事-読んだ記事など&#34;&gt;気になった記事・読んだ記事など&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@ymotongpoo/microsoft-edge%E3%81%AEchromium%E5%8C%96%E3%81%AE%E3%82%A2%E3%83%8A%E3%82%A6%E3%83%B3%E3%82%B9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E6%80%9D%E3%81%86%E3%81%93%E3%81%A8-e232a1834404&#34;&gt;Microsoft EdgeのChromium化のアナウンスについて思うこと – Yoshifumi YAMAGUCHI – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;便利ツール-ショートカット&#34;&gt;便利ツール・ショートカット&lt;/h3&gt;

&lt;h3 id=&#34;公開したもの&#34;&gt;公開したもの&lt;/h3&gt;

&lt;h3 id=&#34;ひとこと&#34;&gt;ひとこと&lt;/h3&gt;

&lt;p&gt;自分でまとめていたコード片や記事に助けられていた1日。「今まとめておく」と「未来の仲間」になって良いぞ！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2018/12/10</title>
      <link>/posts/20181210/</link>
      <pubDate>Mon, 10 Dec 2018 11:40:31 +0900</pubDate>
      
      <guid>/posts/20181210/</guid>
      <description>

&lt;h3 id=&#34;よもやま&#34;&gt;よもやま&lt;/h3&gt;

&lt;h4 id=&#34;adventな週末&#34;&gt;Adventな週末&lt;/h4&gt;

&lt;p&gt;毎日やるやつと、(そういう事するぞ！って決める以前から枠をとっていた)cakeのカレンダーと会社のカレンダーが1本ずつ。合計4本のエントリーが課される結果になり、ひぃ〜〜って言ってた週末でした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/o0h/items/01e83f0952b8c186584f&#34;&gt;CakePHP3の「Query」と仲良くなる記事 / あるいは変なクエリの書き方 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cake.nichiyoubi.land/posts/27-cakephp-dto/&#34;&gt;dereuromark/cakephp-dtoに触ってみる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tech.connehito.com/entry/travis-with-docker&#34;&gt;Travis上でDockerを利用した継続的インテグレーションを実現する with レイヤーキャッシュ - コネヒト開発者ブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cake.nichiyoubi.land/posts/28-cakephp-3_7/&#34;&gt;CakePHP 3.7の個人的な見どころ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まぁ、いちおう書けた(かな？)・・&lt;br /&gt;
これプラスで会社のやつに書きかけてボツったネタにも時間を使ったから、体感的に4.5本書いてる。&lt;br /&gt;
ブログの連続更新に慣れてないから大変だった〜&lt;/p&gt;

&lt;h4 id=&#34;cake3-7&#34;&gt;Cake3.7&lt;/h4&gt;

&lt;p&gt;予想はしていたけど、面倒くさいのがIntegrationTestCase廃止の周りか。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;IntegrationTestTrait::setUp()を呼び出す必要がある

&lt;ul&gt;
&lt;li&gt;これまでみたいに &lt;code&gt;parent::setUp()&lt;/code&gt; でやりにくい&lt;/li&gt;
&lt;li&gt;methodにaliasを当ててそっちを使うよ(traitの内部で親のsetUp()は呼んでくれている)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;fixturesの利用宣言で &lt;code&gt;snake_case&lt;/code&gt; でなく &lt;code&gt;CamelCase&lt;/code&gt; で行こうぜ！！という修正が入ってる。追えてなかった。これは何か使い捨てのシェル書いちゃった方が早いかもなーInflectorクラス使ったら一瞬だって感じすらした、php-fixerとかってこういうことできるのかな？

&lt;ul&gt;
&lt;li&gt;「ある変数名の中身の配列」みたいな変態っぽい縛りできるんだろか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;/images/posts/2018-12-10-15-57-50.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;気になった記事-読んだ記事など&#34;&gt;気になった記事・読んだ記事など&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikiquote.org/wiki/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8&#34;&gt;Wikiquote&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;初めて知った。べんり&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://papix.hatenablog.com/entry/2018/12/09/233231&#34;&gt;｢手順書｣のススメ - Masteries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;便利ツール-ショートカット&#34;&gt;便利ツール・ショートカット&lt;/h3&gt;

&lt;h3 id=&#34;公開したもの&#34;&gt;公開したもの&lt;/h3&gt;

&lt;h3 id=&#34;ひとこと&#34;&gt;ひとこと&lt;/h3&gt;

&lt;p&gt;CakePHPの質問をSlackで投げてお世話になることがしばしばあるのだけど(#japaneseか#support)、メンバーの人が親切でレスも早いのでとてもありがたい。嬉しい気持ちになる&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2018/12/09</title>
      <link>/posts/20181209/</link>
      <pubDate>Sun, 09 Dec 2018 02:32:17 +0900</pubDate>
      
      <guid>/posts/20181209/</guid>
      <description>

&lt;h3 id=&#34;よもやま&#34;&gt;よもやま&lt;/h3&gt;

&lt;h4 id=&#34;xxxx&#34;&gt;xxxx&lt;/h4&gt;

&lt;h4 id=&#34;xxxx-1&#34;&gt;xxxx&lt;/h4&gt;

&lt;h3 id=&#34;気になった記事-読んだ記事など&#34;&gt;気になった記事・読んだ記事など&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/call_user_func/status/1071454532830253056&#34;&gt;https://twitter.com/call_user_func/status/1071454532830253056&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;dereuromarkさんの新作だ！！&lt;/li&gt;
&lt;li&gt;ってことで、Adventのネタにした。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fukabori.fm/&#34;&gt;https://fukabori.fm/&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;流れてきた。聞いてみようかな&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;便利ツール-ショートカット&#34;&gt;便利ツール・ショートカット&lt;/h3&gt;

&lt;h3 id=&#34;公開したもの&#34;&gt;公開したもの&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cake.nichiyoubi.land/posts/27-cakephp-dto/&#34;&gt;dereuromark/cakephp-dtoに触ってみる&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;件のものです。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ひとこと&#34;&gt;ひとこと&lt;/h3&gt;

&lt;p&gt;cakephp-dto、「これ違いそうだな〜」と思って修正しておいたのを、一晩寝かせてから出したら「もう修正済みだよ！master見てね！！」と言われた。&lt;br /&gt;
ぬかったなぁ。確かに、自分が修正してから5h後くらいにfix mergeされてた。。申し訳無さ！&lt;/p&gt;

&lt;p&gt;1日中、書きものをして終わった日じゃ。(でも書物は終わらない)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2018/12/08</title>
      <link>/posts/20181208/</link>
      <pubDate>Sat, 08 Dec 2018 11:40:04 +0900</pubDate>
      
      <guid>/posts/20181208/</guid>
      <description>

&lt;h3 id=&#34;よもやま&#34;&gt;よもやま&lt;/h3&gt;

&lt;h4 id=&#34;php-annotated-monthly-december-2018&#34;&gt;PHP Annotated Monthly – December 2018&lt;/h4&gt;

&lt;p&gt;今月号が届きました。
&lt;a href=&#34;https://blog.jetbrains.com/phpstorm/2018/12/php-annotated-monthly-december-2018/&#34;&gt;PHP Annotated Monthly – December 2018 | PhpStorm Blog&lt;/a&gt;
やはりPHP7.3・・・さっくりと新機能が紹介されているのが嬉しいですね。個人的に気になったもの&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;json_encode/json_decodeの「例外投げる」オプション

&lt;ul&gt;
&lt;li&gt;うれしい！&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;list()の参照渡し

&lt;ul&gt;
&lt;li&gt;参照渡しは使い方を間違えなければ便利と思っている派、ただし「使い方を間違えないようにする」のと同時に「使うべき明らかなメリットを示す」のが難しい・・なくても済む・・・とも感じられることのほうが圧倒的に多いので、基本的に会社とか他人が一緒に触るコードだと書かない。ので、これも「入ったんだ」とは思うけど、使うことあるかな？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ftrailing comma in functions calls

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hoge($a, $b, $c,)&lt;/code&gt; みたいなことをしても嬉しい&lt;/li&gt;
&lt;li&gt;地味に嬉しいw&lt;/li&gt;
&lt;li&gt;(が、これはどうして入ったんだろう・・？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;パフォーマンスが毎回上がり続けるの？(歓喜)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;気になった記事-読んだ記事など&#34;&gt;気になった記事・読んだ記事など&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/okuramasafumi/er-ren-timuniokeruhatukuentokai-fa-falsexiao-lu-hua-woqiu-mete&#34;&gt;二人チームにおけるバックエンド開発の効率化を求めて - Speaker Deck&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;業務はちょっと分野が違う人と2人位でやるのが楽しいよなーって個人的な感覚&lt;/li&gt;
&lt;li&gt;ただ、確かに「レビュー投げまくってごめんなさい・・」も「レビュー返せてなくてごめんなさい・・・・」も体験したので、アレは何か世界を呪いたくなる&lt;/li&gt;
&lt;li&gt;ので、こういう「健全に本質的な事にフォーカスしていくために、やれること(仕組み・仕掛け)は労を惜しまず入れよう！」って当時の自分にも欲しかった観点&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/Maki-Daisuke/items/80cbc26ca43cca3de4e4&#34;&gt;「例外」がないからGo言語はイケてないとかって言ってるヤツが本当にイケてない件 - Qiita&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;煽りタイトルwと思ったけど、内容は愛が深いように感じた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/stomk/7nian-jian-kai-fa-wosok-kerusabisuwozhi-eru-fu-zhai-fan-ji-ri-falsequ-rizu-mi-18fd1bc1-2d44-4c18-bf3f-63cd65600af1&#34;&gt;7年間開発を続けるサービスを支える 負債返済日の取り組み - Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tech.mercari.com/entry/2018/12/08/000000&#34;&gt;2018年のPHPとメルカリ - Mercari Engineering Blog&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;PHPへの寄せ書きみたいになってて、「PHP・・お前、消えるのか？」っていう気持ちにすらなった。寂しい。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;便利ツール-ショートカット&#34;&gt;便利ツール・ショートカット&lt;/h3&gt;

&lt;h3 id=&#34;公開したもの&#34;&gt;公開したもの&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/o0h/items/01e83f0952b8c186584f&#34;&gt;CakePHP3の「Query」と仲良くなる記事 / あるいは変なクエリの書き方 - Qiita&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;書きました&lt;/li&gt;
&lt;li&gt;もっと面白く書きたかった、舐めてたな・・・ :cry:&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ひとこと&#34;&gt;ひとこと&lt;/h3&gt;

&lt;p&gt;おやすみやでぇす&lt;br /&gt;
明日は(業務じゃないけど)一緒に取り組んでいるプロジェクトで追い込まれた人たちが集い、会社で気合を入れる日です&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2018/12/07</title>
      <link>/posts/20181207/</link>
      <pubDate>Fri, 07 Dec 2018 00:15:19 +0900</pubDate>
      
      <guid>/posts/20181207/</guid>
      <description>

&lt;h3 id=&#34;よもやま&#34;&gt;よもやま&lt;/h3&gt;

&lt;h4 id=&#34;php7-3&#34;&gt;PHP7.3 🎉&lt;/h4&gt;

&lt;p&gt;GA!GA!!
&lt;a href=&#34;http://php.net/index.php#id2018-12-06-5&#34;&gt;http://php.net/index.php#id2018-12-06-5&lt;/a&gt;
&lt;img src=&#34;/images/posts/2018-12-07-12-05-09.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;そして私はDockerの公式イメージを待ち続け・・・&lt;br /&gt;
&lt;a href=&#34;https://github.com/docker-library/php/commit/a280ab8e8790052338ce59a1fee739df8f831f16&#34;&gt;Update to 7.3.0 (GA) · docker-library/php@a280ab8&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;dockerのやつ&#34;&gt;Dockerのやつ&lt;/h4&gt;

&lt;p&gt;phpのalpine使おうとしていて、「&lt;code&gt;apk add php7-redis&lt;/code&gt;と&lt;code&gt;pecl install redis&lt;/code&gt;ってどう違うの？あと、apkに&lt;code&gt;php-mbstring&lt;/code&gt;と&lt;code&gt;php7-pdo_mysql&lt;/code&gt;みたいに、prefix違うのがあるな？」ていうのを謎に思っていたのだけど。&lt;br /&gt;
これ、「コアモジュールが&lt;code&gt;php-*&lt;/code&gt;で拡張モジュール/peclが&lt;code&gt;php7-*&lt;/code&gt;かな？」という発想が、脳みそに降りてきた。&lt;/p&gt;

&lt;p&gt;例えば、JSONを例に取ると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash-4.4# apk info php-json
php7-json-7.2.10-r0 description:
PHP7 extension: JSON

php7-json-7.2.10-r0 webpage:
https://secure.php.net

php7-json-7.2.10-r0 installed size:
77824

bash-4.4# apk info php7-json
php7-json-7.2.10-r0 description:
PHP7 extension: JSON

php7-json-7.2.10-r0 webpage:
https://secure.php.net

php7-json-7.2.10-r0 installed size:
77824
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;aliasとして？ &lt;code&gt;php(7)?-json&lt;/code&gt;で行けるんだけど、これは&lt;code&gt;secure.php.net&lt;/code&gt;由来になっている。&lt;br /&gt;
一方で、&lt;code&gt;php7-redis&lt;/code&gt;は&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash-4.4# apk info php7-redis
php7-redis-4.0.2-r0 description:
PHP7 extension for interfacing with Redis

php7-redis-4.0.2-r0 webpage:
https://pecl.php.net/package/redis

php7-redis-4.0.2-r0 installed size:
471040
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;pecl。で、&lt;code&gt;php-redis&lt;/code&gt;は・・？&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash-4.4# apk info php-redis
bash-4.4#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;no hit!&lt;/p&gt;

&lt;p&gt;なるほどね〜&lt;br /&gt;
ってことは、&lt;code&gt;php-*&lt;/code&gt;で使える方は &lt;code&gt;docker-php-ext-install&lt;/code&gt; でも大体いける？&lt;/p&gt;

&lt;h3 id=&#34;github-actionsをした1日&#34;&gt;Github Actionsをした1日&lt;/h3&gt;

&lt;p&gt;めっちゃ楽しかった！
&lt;a href=&#34;http://daisuki.nichiyoubi.land/entry/2018/12/07/202047&#34;&gt;http://daisuki.nichiyoubi.land/entry/2018/12/07/202047&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;cakephp-3-7&#34;&gt;CakePHP 3.7&lt;/h3&gt;

&lt;p&gt;今週末リリース予定らしい&lt;/p&gt;

&lt;h3 id=&#34;気になった記事-読んだ記事など&#34;&gt;気になった記事・読んだ記事など&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rss.p.theconnman.com/#?user=TheConnMan&amp;amp;repo=docker-hub-rss&#34;&gt;Docker Hub RSS&lt;/a&gt; (via &lt;a href=&#34;https://www.reddit.com/r/docker/comments/6cbehq/rss_feed_for_docker_hub_images/&#34;&gt;reddit&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;Docker Hubのレポジトリの更新情報をRSSで流してくれる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;便利ツール-ショートカット&#34;&gt;便利ツール・ショートカット&lt;/h3&gt;

&lt;h3 id=&#34;公開したもの&#34;&gt;公開したもの&lt;/h3&gt;

&lt;h3 id=&#34;ひとこと&#34;&gt;ひとこと&lt;/h3&gt;

&lt;p&gt;酒を呑むぞ！！という気持ちで1日をすごした。なにげに2週間ぶり？&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2018/12/06</title>
      <link>/posts/20181206/</link>
      <pubDate>Thu, 06 Dec 2018 08:24:24 +0900</pubDate>
      
      <guid>/posts/20181206/</guid>
      <description>

&lt;h3 id=&#34;よもやま&#34;&gt;よもやま&lt;/h3&gt;

&lt;h4 id=&#34;reactのやつ&#34;&gt;Reactのやつ&lt;/h4&gt;

&lt;p&gt;隣のエンジニアにReact.Suspense/React.lazyの話を聞いた。機能的には「むしろ今までなかったのか〜」って思う部分だけど、今の時代だと「明らかに超簡単に描画の遅延処理ができるぜ！！」みたいなのが実現できそうで、すっげぇ。&lt;/p&gt;

&lt;h4 id=&#34;style-fix&#34;&gt;style fix&lt;/h4&gt;

&lt;p&gt;PHPの自動整形ツール、php-cs-fixterがちょっと気になっていて触ってみた。phpcbfよりも、ちょっと強めに動ける感じかな？&lt;br /&gt;
フロントエンドのコーディングに関してprettierを使ってみると、体験として「すごく良い意味で縛られる」という感じがあったの、もしあれをPHPでもできたら？とは思う。ただ、もしphpcsの既存ルールとぶつかっていったら地獄や・・・という恐怖もあって、使っていない感じ。&lt;/p&gt;

&lt;p&gt;このあたり、もし望めるなら「自分で拡張できる柔軟性」なのだ。検出ルールと整形ルールを書けたら・・・？と。ということで、DSLっぽい記法やAPI自体の学習コストがゼロになるとは期待していないが、「最初に頑張ったらガンガン好きにできる！」みたいなことになれば、すっごく良さそうだ・・・・！ってことで、興味の対象に。&lt;/p&gt;

&lt;p&gt;関連して。&lt;br /&gt;
&lt;a href=&#34;https://github.com/laravel/laravel/pull/4496&#34;&gt;Add PHPCS config file by skyrpex · Pull Request #4496 · laravel/laravel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Laravelって、phpcsのルールセットをおいてないのか・・・驚いた。&lt;/p&gt;

&lt;h3 id=&#34;気になった記事-読んだ記事など&#34;&gt;気になった記事・読んだ記事など&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/natsuyoshi_jr/items/23acf2466942af4ab8c0&#34;&gt;[PHP]安定したシステム運用を目指して取り組んだこと - Qiita&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;なるほど。原則として「速さより見易さ」で良いと思うんだけど、このくらいなら意識して良さそう。mergeしたいときしかarray_merge使わないし、普段からappend/pushしたいならそういう表現をとっているはずだけど。&lt;/li&gt;
&lt;li&gt;とはいえ、配列の結合($ar1 + $ar2)だったり、array_pushと$ar[] = $aだったり、似たような書き方多くて、明確に「こっちの書き方でないとアカン！！」っていうこともない場合、どっちにしたものかは悩ましいぞPHP！！って思う&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://reactjs.org/blog/2018/11/27/react-16-roadmap.html#react-166-shipped-the-one-with-suspense-for-code-splitting&#34;&gt;React 16.x Roadmap – React Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;便利ツール-ショートカット&#34;&gt;便利ツール・ショートカット&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sebastianbergmann/phpcpd&#34;&gt;sebastianbergmann/phpcpd: Copy/Paste Detector (CPD) for PHP code.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;公開したもの&#34;&gt;公開したもの&lt;/h3&gt;

&lt;h3 id=&#34;ひとこと&#34;&gt;ひとこと&lt;/h3&gt;

&lt;p&gt;今朝は少し早めに活動を開始できたのだけど、昨夜の夕飯を抜いたから！な気がする。毎日そうすればいいんだろうな・・・&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2018/12/05</title>
      <link>/posts/20181205/</link>
      <pubDate>Wed, 05 Dec 2018 00:39:46 +0900</pubDate>
      
      <guid>/posts/20181205/</guid>
      <description>

&lt;h3 id=&#34;よもやま&#34;&gt;よもやま&lt;/h3&gt;

&lt;h4 id=&#34;cakeなやつ&#34;&gt;cakeなやつ&lt;/h4&gt;

&lt;p&gt;Cakeの &lt;code&gt;Query&lt;/code&gt; 、1回やったあとは結果がキャッシュされる。(当たり前っちゃあ、まぁ・・そうだよね〜という感じ)。&lt;code&gt;Query::$_results&lt;/code&gt; の中に値があるか？を、 &lt;code&gt;all()&lt;/code&gt; の最初の方でチェックしに行くのねーって思った。resultsをインスタンス内に保持するのとcacheって別なのか。&lt;/p&gt;

&lt;h4 id=&#34;dockerなやつ&#34;&gt;dockerなやつ&lt;/h4&gt;

&lt;p&gt;夜(AM)にDockerというかphp7-alpineを触っていて、何か思ってたんと違う〜〜っていう場面があり。理解が浅い。&lt;br /&gt;
docer-php-ext-install、apk add php7-hogehoge、apk add php-hogehoge、pecl install hogehoge・・・と。「CakeのAppはmod_php上で動くのだけど、composer installするとext不足で怒られる」という場面が多々。それさえできちゃえば、恐らく手元でちゃんと動かせるようになるのかな・・・・？というくらいの温度感。&lt;/p&gt;

&lt;p&gt;あと、今まで適当にゼロからのphpアプリケーションを作る！という時にはphp-alpine-fpmイメージを使ったことがあったものの。今回は会社の既存アプリケーションを試してみながら手を実際に動かしてみよう！であり、そのため「割とちゃんと使ってみよう」という目的。そうして行く中で、 &lt;code&gt;apk add --virtual&lt;/code&gt; とか &lt;code&gt;apk add --no-cache&lt;/code&gt; とか、なるほど確かにこれはめっちゃ軽量なイメージが作れそうだ・・・！と興奮していた。今までは、「元々のイメージサイズが小さい」とか「必要最低限のパッケージに絞り込んである」とか、それだけのイメージだった。小さい・速いは正義だと思うので、これはちゃんと使えるようにしたいな〜&lt;/p&gt;

&lt;h3 id=&#34;気になった記事-読んだ記事など&#34;&gt;気になった記事・読んだ記事など&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.alpinelinux.org/wiki/Setting_Up_Apache_with_PHP&#34;&gt;Setting Up Apache with PHP - Alpine Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.matchingood.com/entry/2017/03/09/202011&#34;&gt;php7-session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://unskilled.site/docker%E3%81%AE%E5%85%AC%E5%BC%8Fphp%E3%81%AEdockerfile%E3%82%92%E9%A0%91%E5%BC%B5%E3%81%A3%E3%81%A6%E8%AA%AD%E3%82%93%E3%81%A7%E7%90%86%E8%A7%A3%E3%81%97%E3%82%88%E3%81%86%E3%81%A8%E3%81%97%E3%81%A6/&#34;&gt;Dockerの公式PHPのDockerfileを頑張って読んで理解しようとしてみた | Unskilled?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rainorshine.asia/2018/05/07/post2951.html&#34;&gt;Alpineベースの公式PHPイメージにImagickをインストールする&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--virtual&lt;/code&gt;とか&lt;code&gt;build-dependencies&lt;/code&gt; ってそういうことか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/nmatayoshi/items/e7f34e1e220264131934&#34;&gt;dockerのphp:7-fpm-alpineイメージでCakePHP3を動かす - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;便利ツール-ショートカット&#34;&gt;便利ツール・ショートカット&lt;/h3&gt;

&lt;h3 id=&#34;公開したもの&#34;&gt;公開したもの&lt;/h3&gt;

&lt;h3 id=&#34;ひとこと&#34;&gt;ひとこと&lt;/h3&gt;

&lt;p&gt;相変わらず〜だけど、まだCakeの割と基本的だったりチュートリアルに載っているような内容でも知らなかったり挙動を掴んでいないものが、チラホラあるなぁ。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2018/12/04</title>
      <link>/posts/20181204/</link>
      <pubDate>Tue, 04 Dec 2018 19:43:17 +0900</pubDate>
      
      <guid>/posts/20181204/</guid>
      <description>

&lt;p&gt;この投稿はテストです。&lt;br /&gt;
&lt;a href=&#34;http://daisuki.nichiyoubi.land/entry/2018/12/04/183259&#34;&gt;http://daisuki.nichiyoubi.land/entry/2018/12/04/183259&lt;/a&gt; という記事を書きました、コレはこのサイトの構築時メモです。&lt;br /&gt;
隣の席のエンジニアにインスパイアされてやりました。&lt;/p&gt;

&lt;p&gt;元ネタ: &lt;a href=&#34;https://www.sarasoueidan.com/desk/just-write/&#34;&gt;Just write. — Sara Soueidan – Freelance-Front-End UI/UX Developer&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;気になった記事-読んだ記事など&#34;&gt;気になった記事・読んだ記事など&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.atmarkit.co.jp/ait/articles/1507/21/news017.html&#34;&gt;Visual Studio CodeでGitを利用する (&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt;)：特集：Visual Studio Code早分かりガイド - ＠IT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/n0bisuke/items/4701481c3bca4df81b0b&#34;&gt;Hugoで新規記事を作成するときのTips的なメモ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://oyasu.github.io/2018/02/hugo_vscode/&#34;&gt;VSCodeとHugoでブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=mushan.vscode-paste-image&#34;&gt;Paste Image - Visual Studio Marketplace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://biz.connehito.com/entry/2018/12/04/112859&#34;&gt;OKR推進を支える「わくわく感」と「いけそう感」について話すよ - コネヒトのタレ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;便利ツール-ショートカット&#34;&gt;便利ツール・ショートカット&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://flaviocopes.com/vscode/#the-command-palette&#34;&gt;THE COMMAND PALETTE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;vscode / &lt;code&gt;cmd + opt + p&lt;/code&gt; Paste Imageのクリップボード貼り付け&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;公開したもの&#34;&gt;公開したもの&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://daisuki.nichiyoubi.land/entry/2018/12/04/183259&#34;&gt;「Hugoでgithub-pages使ってカスタムドメインなブログを構築する」を0から - 大好き！にちようび&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ひとこと&#34;&gt;ひとこと&lt;/h3&gt;

&lt;p&gt;とりあえず、「Hugoで毎日メモを作っていこう！」と決めた日。&lt;br /&gt;
Terminal VIM / Visual Studio Codeがメインエディタになるのかな〜というイメージ。画像を使うなら後者か。&lt;br /&gt;
ひとまず「まぁVS Codeの方が汎用性高いかな？」ということで、 「ターミナルからコンテンツ作成&amp;amp;&amp;amp;エディタ起動」みたいなfunciton定義して.zhsrcに入れておいた。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>